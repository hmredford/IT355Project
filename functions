CREATE TRIGGER populateOrderTotal AFTER INSERT ON custOrderList FOR EACH ROW
 	UPDATE custOrder
 	JOIN custOrderList ON custOrder.custOrder = custOrderList.custOrder
 	JOIN game ON custOrderList.productID = game.productID 
 	SET paymentTotal = custOrderList.quantity * game.price;





CREATE VIEW custOrderSummary AS 
	SELECT custOrder.custOrder, custOrder.customerID, customer.firstName, customer.lastName, game.name, custOrderList.quantity, orderDate, paymentMethod, paymentTotal, paymentDate, status
	FROM custOrder
	RIGHT JOIN custOrderList 
	ON custOrder.custOrder = custOrderList.custOrder
	RIGHT JOIN game
	ON game.productID = custOrderList.productID
	RIGHT JOIN customer
	ON custOrder.customerID = customer.customerID
	RIGHT JOIN shipping
	ON custOrder.custOrder = shipping.custOrder
	GROUP BY custOrder.custOrder
	ORDER BY orderDate DESC;



	Stored Proceedure: 
	
	select * products from a custOrder


CREATE PROCEDURE viewMerchOrders()
	SELECT merchOrder.merchOrder, merchOrder.employeeID, employee.firstName,employee.lastName, game.name, merchOrderList.quantity, orderDate, paymentMethod, paymentTotal, paymentDate, status
	FROM merchOrder
	RIGHT JOIN merchOrderList 
	ON merchOrder.merchOrder = merchOrderList.merchOrder
	RIGHT JOIN game
	ON game.productID = merchOrderList.productID
	RIGHT JOIN employee
	ON merchOrder.employeeID = employee.employeeID
	RIGHT JOIN receiving
	ON merchOrder.merchOrder = receiving.merchOrder
	ORDER BY orderDate DESC;
